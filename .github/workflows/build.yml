on:
  push:
  pull_request:

name: Build

env:
  RUSTFLAGS: "--deny warnings"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, 1.85]
        TARGET:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - arm-unknown-linux-gnueabi # Raspberry Pi 1
          - armv7-unknown-linux-gnueabihf # Raspberry Pi 2, 3, etc
          # Bare metal
          - thumbv6m-none-eabi
          - thumbv7em-none-eabi
          - thumbv7em-none-eabihf
          - thumbv7m-none-eabi

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.TARGET }}
          override: true

      #- name: Checkout CI scripts
      #  uses: actions/checkout@v4
      #  with:
      #    repository: "eldruin/rust-driver-ci-scripts"
      #    ref: "master"
      #    path: "ci"

      #- run: ./ci/patch-no-std.sh
      #  if: ${{ ! contains(matrix.TARGET, 'x86_64') }}

      - name: Build
        run: cargo build --target=${{ matrix.TARGET }}

  checks:
    name: Checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
        TARGET:
          - x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.TARGET }}
          override: true
          components: rustfmt

      - name: Doc
        run: cargo doc

      - name: Formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [1.85]
        TARGET:
          - x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.TARGET }}
          override: true
          components: clippy

      - name: Clippy
        run: cargo clippy

  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
        TARGET: [x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.TARGET }}
          override: true

      - name: Test
        run: cargo test --target=${{ matrix.TARGET }}
